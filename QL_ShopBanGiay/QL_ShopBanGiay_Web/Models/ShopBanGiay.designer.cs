#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace QL_ShopBanGiay_Web.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="QL_ShopBanGiay")]
	public partial class ShopBanGiayDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertChiNhanh(ChiNhanh instance);
    partial void UpdateChiNhanh(ChiNhanh instance);
    partial void DeleteChiNhanh(ChiNhanh instance);
    partial void InsertVaiTro(VaiTro instance);
    partial void UpdateVaiTro(VaiTro instance);
    partial void DeleteVaiTro(VaiTro instance);
    partial void InsertChiTietDonHang(ChiTietDonHang instance);
    partial void UpdateChiTietDonHang(ChiTietDonHang instance);
    partial void DeleteChiTietDonHang(ChiTietDonHang instance);
    partial void InsertChiTietHoaDon(ChiTietHoaDon instance);
    partial void UpdateChiTietHoaDon(ChiTietHoaDon instance);
    partial void DeleteChiTietHoaDon(ChiTietHoaDon instance);
    partial void InsertChiTietHoaDonNhapKho(ChiTietHoaDonNhapKho instance);
    partial void UpdateChiTietHoaDonNhapKho(ChiTietHoaDonNhapKho instance);
    partial void DeleteChiTietHoaDonNhapKho(ChiTietHoaDonNhapKho instance);
    partial void InsertDonHang(DonHang instance);
    partial void UpdateDonHang(DonHang instance);
    partial void DeleteDonHang(DonHang instance);
    partial void InsertHoaDon(HoaDon instance);
    partial void UpdateHoaDon(HoaDon instance);
    partial void DeleteHoaDon(HoaDon instance);
    partial void InsertHoaDonNhapKho(HoaDonNhapKho instance);
    partial void UpdateHoaDonNhapKho(HoaDonNhapKho instance);
    partial void DeleteHoaDonNhapKho(HoaDonNhapKho instance);
    partial void InsertKhachHang(KhachHang instance);
    partial void UpdateKhachHang(KhachHang instance);
    partial void DeleteKhachHang(KhachHang instance);
    partial void InsertKho(Kho instance);
    partial void UpdateKho(Kho instance);
    partial void DeleteKho(Kho instance);
    partial void InsertLoaiSanPham(LoaiSanPham instance);
    partial void UpdateLoaiSanPham(LoaiSanPham instance);
    partial void DeleteLoaiSanPham(LoaiSanPham instance);
    partial void InsertLoaiSanPhamCha(LoaiSanPhamCha instance);
    partial void UpdateLoaiSanPhamCha(LoaiSanPhamCha instance);
    partial void DeleteLoaiSanPhamCha(LoaiSanPhamCha instance);
    partial void InsertNguoiDung(NguoiDung instance);
    partial void UpdateNguoiDung(NguoiDung instance);
    partial void DeleteNguoiDung(NguoiDung instance);
    partial void InsertNhanVien(NhanVien instance);
    partial void UpdateNhanVien(NhanVien instance);
    partial void DeleteNhanVien(NhanVien instance);
    partial void InsertPhanHoi(PhanHoi instance);
    partial void UpdatePhanHoi(PhanHoi instance);
    partial void DeletePhanHoi(PhanHoi instance);
    partial void InsertSanPham(SanPham instance);
    partial void UpdateSanPham(SanPham instance);
    partial void DeleteSanPham(SanPham instance);
    #endregion
		
		public ShopBanGiayDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["QL_ShopBanGiayConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public ShopBanGiayDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ShopBanGiayDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ShopBanGiayDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ShopBanGiayDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<ChiNhanh> ChiNhanhs
		{
			get
			{
				return this.GetTable<ChiNhanh>();
			}
		}
		
		public System.Data.Linq.Table<VaiTro> VaiTros
		{
			get
			{
				return this.GetTable<VaiTro>();
			}
		}
		
		public System.Data.Linq.Table<ChiTietDonHang> ChiTietDonHangs
		{
			get
			{
				return this.GetTable<ChiTietDonHang>();
			}
		}
		
		public System.Data.Linq.Table<ChiTietHoaDon> ChiTietHoaDons
		{
			get
			{
				return this.GetTable<ChiTietHoaDon>();
			}
		}
		
		public System.Data.Linq.Table<ChiTietHoaDonNhapKho> ChiTietHoaDonNhapKhos
		{
			get
			{
				return this.GetTable<ChiTietHoaDonNhapKho>();
			}
		}
		
		public System.Data.Linq.Table<DanhGiaSanPham> DanhGiaSanPhams
		{
			get
			{
				return this.GetTable<DanhGiaSanPham>();
			}
		}
		
		public System.Data.Linq.Table<DonHang> DonHangs
		{
			get
			{
				return this.GetTable<DonHang>();
			}
		}
		
		public System.Data.Linq.Table<HoaDon> HoaDons
		{
			get
			{
				return this.GetTable<HoaDon>();
			}
		}
		
		public System.Data.Linq.Table<HoaDonNhapKho> HoaDonNhapKhos
		{
			get
			{
				return this.GetTable<HoaDonNhapKho>();
			}
		}
		
		public System.Data.Linq.Table<KhachHang> KhachHangs
		{
			get
			{
				return this.GetTable<KhachHang>();
			}
		}
		
		public System.Data.Linq.Table<Kho> Khos
		{
			get
			{
				return this.GetTable<Kho>();
			}
		}
		
		public System.Data.Linq.Table<LoaiSanPham> LoaiSanPhams
		{
			get
			{
				return this.GetTable<LoaiSanPham>();
			}
		}
		
		public System.Data.Linq.Table<LoaiSanPhamCha> LoaiSanPhamChas
		{
			get
			{
				return this.GetTable<LoaiSanPhamCha>();
			}
		}
		
		public System.Data.Linq.Table<NguoiDung> NguoiDungs
		{
			get
			{
				return this.GetTable<NguoiDung>();
			}
		}
		
		public System.Data.Linq.Table<NhanVien> NhanViens
		{
			get
			{
				return this.GetTable<NhanVien>();
			}
		}
		
		public System.Data.Linq.Table<PhanHoi> PhanHois
		{
			get
			{
				return this.GetTable<PhanHoi>();
			}
		}
		
		public System.Data.Linq.Table<SanPham> SanPhams
		{
			get
			{
				return this.GetTable<SanPham>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.func_TongTienDonHang", IsComposable=true)]
		public System.Nullable<long> func_TongTienDonHang([global::System.Data.Linq.Mapping.ParameterAttribute(Name="IdDonhang", DbType="BigInt")] System.Nullable<long> idDonhang)
		{
			return ((System.Nullable<long>)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), idDonhang).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.func_TongTienHoaDon", IsComposable=true)]
		public System.Nullable<long> func_TongTienHoaDon([global::System.Data.Linq.Mapping.ParameterAttribute(Name="IdHoaDon", DbType="BigInt")] System.Nullable<long> idHoaDon)
		{
			return ((System.Nullable<long>)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), idHoaDon).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.func_TongTienDonHangCuaKhach", IsComposable=true)]
		public System.Nullable<long> func_TongTienDonHangCuaKhach([global::System.Data.Linq.Mapping.ParameterAttribute(Name="IdKhachHang", DbType="BigInt")] System.Nullable<long> idKhachHang, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Thang", DbType="Int")] System.Nullable<int> thang, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Nam", DbType="Int")] System.Nullable<int> nam)
		{
			return ((System.Nullable<long>)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), idKhachHang, thang, nam).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.func_GiaSanPham", IsComposable=true)]
		public System.Nullable<long> func_GiaSanPham([global::System.Data.Linq.Mapping.ParameterAttribute(Name="IdSanPham", DbType="BigInt")] System.Nullable<long> idSanPham)
		{
			return ((System.Nullable<long>)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), idSanPham).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.func_TinhDoanhThuChiNhanh", IsComposable=true)]
		public System.Nullable<long> func_TinhDoanhThuChiNhanh([global::System.Data.Linq.Mapping.ParameterAttribute(Name="IdChiNhanh", DbType="Int")] System.Nullable<int> idChiNhanh, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Ngay", DbType="Int")] System.Nullable<int> ngay, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Thang", DbType="Int")] System.Nullable<int> thang, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Nam", DbType="Int")] System.Nullable<int> nam)
		{
			return ((System.Nullable<long>)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), idChiNhanh, ngay, thang, nam).ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ChiNhanh")]
	public partial class ChiNhanh : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdChiNhanh;
		
		private string _TenChiNhanh;
		
		private string _DiaChi;
		
		private EntitySet<HoaDon> _HoaDons;
		
		private EntitySet<HoaDonNhapKho> _HoaDonNhapKhos;
		
		private EntitySet<Kho> _Khos;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChiNhanhChanging(int value);
    partial void OnIdChiNhanhChanged();
    partial void OnTenChiNhanhChanging(string value);
    partial void OnTenChiNhanhChanged();
    partial void OnDiaChiChanging(string value);
    partial void OnDiaChiChanged();
    #endregion
		
		public ChiNhanh()
		{
			this._HoaDons = new EntitySet<HoaDon>(new Action<HoaDon>(this.attach_HoaDons), new Action<HoaDon>(this.detach_HoaDons));
			this._HoaDonNhapKhos = new EntitySet<HoaDonNhapKho>(new Action<HoaDonNhapKho>(this.attach_HoaDonNhapKhos), new Action<HoaDonNhapKho>(this.detach_HoaDonNhapKhos));
			this._Khos = new EntitySet<Kho>(new Action<Kho>(this.attach_Khos), new Action<Kho>(this.detach_Khos));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdChiNhanh", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdChiNhanh
		{
			get
			{
				return this._IdChiNhanh;
			}
			set
			{
				if ((this._IdChiNhanh != value))
				{
					this.OnIdChiNhanhChanging(value);
					this.SendPropertyChanging();
					this._IdChiNhanh = value;
					this.SendPropertyChanged("IdChiNhanh");
					this.OnIdChiNhanhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenChiNhanh", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string TenChiNhanh
		{
			get
			{
				return this._TenChiNhanh;
			}
			set
			{
				if ((this._TenChiNhanh != value))
				{
					this.OnTenChiNhanhChanging(value);
					this.SendPropertyChanging();
					this._TenChiNhanh = value;
					this.SendPropertyChanged("TenChiNhanh");
					this.OnTenChiNhanhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaChi", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string DiaChi
		{
			get
			{
				return this._DiaChi;
			}
			set
			{
				if ((this._DiaChi != value))
				{
					this.OnDiaChiChanging(value);
					this.SendPropertyChanging();
					this._DiaChi = value;
					this.SendPropertyChanged("DiaChi");
					this.OnDiaChiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ChiNhanh_HoaDon", Storage="_HoaDons", ThisKey="IdChiNhanh", OtherKey="IdChiNhanh")]
		public EntitySet<HoaDon> HoaDons
		{
			get
			{
				return this._HoaDons;
			}
			set
			{
				this._HoaDons.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ChiNhanh_HoaDonNhapKho", Storage="_HoaDonNhapKhos", ThisKey="IdChiNhanh", OtherKey="IdChiNhanh")]
		public EntitySet<HoaDonNhapKho> HoaDonNhapKhos
		{
			get
			{
				return this._HoaDonNhapKhos;
			}
			set
			{
				this._HoaDonNhapKhos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ChiNhanh_Kho", Storage="_Khos", ThisKey="IdChiNhanh", OtherKey="IdChiNhanh")]
		public EntitySet<Kho> Khos
		{
			get
			{
				return this._Khos;
			}
			set
			{
				this._Khos.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HoaDons(HoaDon entity)
		{
			this.SendPropertyChanging();
			entity.ChiNhanh = this;
		}
		
		private void detach_HoaDons(HoaDon entity)
		{
			this.SendPropertyChanging();
			entity.ChiNhanh = null;
		}
		
		private void attach_HoaDonNhapKhos(HoaDonNhapKho entity)
		{
			this.SendPropertyChanging();
			entity.ChiNhanh = this;
		}
		
		private void detach_HoaDonNhapKhos(HoaDonNhapKho entity)
		{
			this.SendPropertyChanging();
			entity.ChiNhanh = null;
		}
		
		private void attach_Khos(Kho entity)
		{
			this.SendPropertyChanging();
			entity.ChiNhanh = this;
		}
		
		private void detach_Khos(Kho entity)
		{
			this.SendPropertyChanging();
			entity.ChiNhanh = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.VaiTro")]
	public partial class VaiTro : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdVaiTro;
		
		private string _TenVaiTro;
		
		private EntitySet<NguoiDung> _NguoiDungs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdVaiTroChanging(int value);
    partial void OnIdVaiTroChanged();
    partial void OnTenVaiTroChanging(string value);
    partial void OnTenVaiTroChanged();
    #endregion
		
		public VaiTro()
		{
			this._NguoiDungs = new EntitySet<NguoiDung>(new Action<NguoiDung>(this.attach_NguoiDungs), new Action<NguoiDung>(this.detach_NguoiDungs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdVaiTro", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdVaiTro
		{
			get
			{
				return this._IdVaiTro;
			}
			set
			{
				if ((this._IdVaiTro != value))
				{
					this.OnIdVaiTroChanging(value);
					this.SendPropertyChanging();
					this._IdVaiTro = value;
					this.SendPropertyChanged("IdVaiTro");
					this.OnIdVaiTroChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenVaiTro", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string TenVaiTro
		{
			get
			{
				return this._TenVaiTro;
			}
			set
			{
				if ((this._TenVaiTro != value))
				{
					this.OnTenVaiTroChanging(value);
					this.SendPropertyChanging();
					this._TenVaiTro = value;
					this.SendPropertyChanged("TenVaiTro");
					this.OnTenVaiTroChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="VaiTro_NguoiDung", Storage="_NguoiDungs", ThisKey="IdVaiTro", OtherKey="IdVaiTro")]
		public EntitySet<NguoiDung> NguoiDungs
		{
			get
			{
				return this._NguoiDungs;
			}
			set
			{
				this._NguoiDungs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_NguoiDungs(NguoiDung entity)
		{
			this.SendPropertyChanging();
			entity.VaiTro = this;
		}
		
		private void detach_NguoiDungs(NguoiDung entity)
		{
			this.SendPropertyChanging();
			entity.VaiTro = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ChiTietDonHang")]
	public partial class ChiTietDonHang : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _IdDonHang;
		
		private long _IdSanPham;
		
		private int _SoLuong;
		
		private double _DonGia;
		
		private EntityRef<DonHang> _DonHang;
		
		private EntityRef<SanPham> _SanPham;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdDonHangChanging(long value);
    partial void OnIdDonHangChanged();
    partial void OnIdSanPhamChanging(long value);
    partial void OnIdSanPhamChanged();
    partial void OnSoLuongChanging(int value);
    partial void OnSoLuongChanged();
    partial void OnDonGiaChanging(double value);
    partial void OnDonGiaChanged();
    #endregion
		
		public ChiTietDonHang()
		{
			this._DonHang = default(EntityRef<DonHang>);
			this._SanPham = default(EntityRef<SanPham>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdDonHang", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long IdDonHang
		{
			get
			{
				return this._IdDonHang;
			}
			set
			{
				if ((this._IdDonHang != value))
				{
					if (this._DonHang.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdDonHangChanging(value);
					this.SendPropertyChanging();
					this._IdDonHang = value;
					this.SendPropertyChanged("IdDonHang");
					this.OnIdDonHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdSanPham", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long IdSanPham
		{
			get
			{
				return this._IdSanPham;
			}
			set
			{
				if ((this._IdSanPham != value))
				{
					if (this._SanPham.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdSanPhamChanging(value);
					this.SendPropertyChanging();
					this._IdSanPham = value;
					this.SendPropertyChanged("IdSanPham");
					this.OnIdSanPhamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLuong", DbType="Int NOT NULL")]
		public int SoLuong
		{
			get
			{
				return this._SoLuong;
			}
			set
			{
				if ((this._SoLuong != value))
				{
					this.OnSoLuongChanging(value);
					this.SendPropertyChanging();
					this._SoLuong = value;
					this.SendPropertyChanged("SoLuong");
					this.OnSoLuongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DonGia", DbType="Float NOT NULL")]
		public double DonGia
		{
			get
			{
				return this._DonGia;
			}
			set
			{
				if ((this._DonGia != value))
				{
					this.OnDonGiaChanging(value);
					this.SendPropertyChanging();
					this._DonGia = value;
					this.SendPropertyChanged("DonGia");
					this.OnDonGiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DonHang_ChiTietDonHang", Storage="_DonHang", ThisKey="IdDonHang", OtherKey="IdDonHang", IsForeignKey=true)]
		public DonHang DonHang
		{
			get
			{
				return this._DonHang.Entity;
			}
			set
			{
				DonHang previousValue = this._DonHang.Entity;
				if (((previousValue != value) 
							|| (this._DonHang.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DonHang.Entity = null;
						previousValue.ChiTietDonHangs.Remove(this);
					}
					this._DonHang.Entity = value;
					if ((value != null))
					{
						value.ChiTietDonHangs.Add(this);
						this._IdDonHang = value.IdDonHang;
					}
					else
					{
						this._IdDonHang = default(long);
					}
					this.SendPropertyChanged("DonHang");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SanPham_ChiTietDonHang", Storage="_SanPham", ThisKey="IdSanPham", OtherKey="IdSanPham", IsForeignKey=true)]
		public SanPham SanPham
		{
			get
			{
				return this._SanPham.Entity;
			}
			set
			{
				SanPham previousValue = this._SanPham.Entity;
				if (((previousValue != value) 
							|| (this._SanPham.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SanPham.Entity = null;
						previousValue.ChiTietDonHangs.Remove(this);
					}
					this._SanPham.Entity = value;
					if ((value != null))
					{
						value.ChiTietDonHangs.Add(this);
						this._IdSanPham = value.IdSanPham;
					}
					else
					{
						this._IdSanPham = default(long);
					}
					this.SendPropertyChanged("SanPham");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ChiTietHoaDon")]
	public partial class ChiTietHoaDon : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _IdHoaDon;
		
		private long _IdSanPham;
		
		private int _SoLuong;
		
		private double _DonGia;
		
		private EntityRef<HoaDon> _HoaDon;
		
		private EntityRef<SanPham> _SanPham;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdHoaDonChanging(long value);
    partial void OnIdHoaDonChanged();
    partial void OnIdSanPhamChanging(long value);
    partial void OnIdSanPhamChanged();
    partial void OnSoLuongChanging(int value);
    partial void OnSoLuongChanged();
    partial void OnDonGiaChanging(double value);
    partial void OnDonGiaChanged();
    #endregion
		
		public ChiTietHoaDon()
		{
			this._HoaDon = default(EntityRef<HoaDon>);
			this._SanPham = default(EntityRef<SanPham>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdHoaDon", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long IdHoaDon
		{
			get
			{
				return this._IdHoaDon;
			}
			set
			{
				if ((this._IdHoaDon != value))
				{
					if (this._HoaDon.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdHoaDonChanging(value);
					this.SendPropertyChanging();
					this._IdHoaDon = value;
					this.SendPropertyChanged("IdHoaDon");
					this.OnIdHoaDonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdSanPham", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long IdSanPham
		{
			get
			{
				return this._IdSanPham;
			}
			set
			{
				if ((this._IdSanPham != value))
				{
					if (this._SanPham.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdSanPhamChanging(value);
					this.SendPropertyChanging();
					this._IdSanPham = value;
					this.SendPropertyChanged("IdSanPham");
					this.OnIdSanPhamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLuong", DbType="Int NOT NULL")]
		public int SoLuong
		{
			get
			{
				return this._SoLuong;
			}
			set
			{
				if ((this._SoLuong != value))
				{
					this.OnSoLuongChanging(value);
					this.SendPropertyChanging();
					this._SoLuong = value;
					this.SendPropertyChanged("SoLuong");
					this.OnSoLuongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DonGia", DbType="Float NOT NULL")]
		public double DonGia
		{
			get
			{
				return this._DonGia;
			}
			set
			{
				if ((this._DonGia != value))
				{
					this.OnDonGiaChanging(value);
					this.SendPropertyChanging();
					this._DonGia = value;
					this.SendPropertyChanged("DonGia");
					this.OnDonGiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HoaDon_ChiTietHoaDon", Storage="_HoaDon", ThisKey="IdHoaDon", OtherKey="IdHoaDon", IsForeignKey=true)]
		public HoaDon HoaDon
		{
			get
			{
				return this._HoaDon.Entity;
			}
			set
			{
				HoaDon previousValue = this._HoaDon.Entity;
				if (((previousValue != value) 
							|| (this._HoaDon.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HoaDon.Entity = null;
						previousValue.ChiTietHoaDons.Remove(this);
					}
					this._HoaDon.Entity = value;
					if ((value != null))
					{
						value.ChiTietHoaDons.Add(this);
						this._IdHoaDon = value.IdHoaDon;
					}
					else
					{
						this._IdHoaDon = default(long);
					}
					this.SendPropertyChanged("HoaDon");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SanPham_ChiTietHoaDon", Storage="_SanPham", ThisKey="IdSanPham", OtherKey="IdSanPham", IsForeignKey=true)]
		public SanPham SanPham
		{
			get
			{
				return this._SanPham.Entity;
			}
			set
			{
				SanPham previousValue = this._SanPham.Entity;
				if (((previousValue != value) 
							|| (this._SanPham.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SanPham.Entity = null;
						previousValue.ChiTietHoaDons.Remove(this);
					}
					this._SanPham.Entity = value;
					if ((value != null))
					{
						value.ChiTietHoaDons.Add(this);
						this._IdSanPham = value.IdSanPham;
					}
					else
					{
						this._IdSanPham = default(long);
					}
					this.SendPropertyChanged("SanPham");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ChiTietHoaDonNhapKho")]
	public partial class ChiTietHoaDonNhapKho : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _IdHoaDonNhapKho;
		
		private long _IdSanPham;
		
		private System.Nullable<int> _SoLuong;
		
		private EntityRef<HoaDonNhapKho> _HoaDonNhapKho;
		
		private EntityRef<SanPham> _SanPham;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdHoaDonNhapKhoChanging(long value);
    partial void OnIdHoaDonNhapKhoChanged();
    partial void OnIdSanPhamChanging(long value);
    partial void OnIdSanPhamChanged();
    partial void OnSoLuongChanging(System.Nullable<int> value);
    partial void OnSoLuongChanged();
    #endregion
		
		public ChiTietHoaDonNhapKho()
		{
			this._HoaDonNhapKho = default(EntityRef<HoaDonNhapKho>);
			this._SanPham = default(EntityRef<SanPham>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdHoaDonNhapKho", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long IdHoaDonNhapKho
		{
			get
			{
				return this._IdHoaDonNhapKho;
			}
			set
			{
				if ((this._IdHoaDonNhapKho != value))
				{
					if (this._HoaDonNhapKho.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdHoaDonNhapKhoChanging(value);
					this.SendPropertyChanging();
					this._IdHoaDonNhapKho = value;
					this.SendPropertyChanged("IdHoaDonNhapKho");
					this.OnIdHoaDonNhapKhoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdSanPham", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long IdSanPham
		{
			get
			{
				return this._IdSanPham;
			}
			set
			{
				if ((this._IdSanPham != value))
				{
					if (this._SanPham.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdSanPhamChanging(value);
					this.SendPropertyChanging();
					this._IdSanPham = value;
					this.SendPropertyChanged("IdSanPham");
					this.OnIdSanPhamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLuong", DbType="Int")]
		public System.Nullable<int> SoLuong
		{
			get
			{
				return this._SoLuong;
			}
			set
			{
				if ((this._SoLuong != value))
				{
					this.OnSoLuongChanging(value);
					this.SendPropertyChanging();
					this._SoLuong = value;
					this.SendPropertyChanged("SoLuong");
					this.OnSoLuongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HoaDonNhapKho_ChiTietHoaDonNhapKho", Storage="_HoaDonNhapKho", ThisKey="IdHoaDonNhapKho", OtherKey="IdHoaDonNhapKho", IsForeignKey=true)]
		public HoaDonNhapKho HoaDonNhapKho
		{
			get
			{
				return this._HoaDonNhapKho.Entity;
			}
			set
			{
				HoaDonNhapKho previousValue = this._HoaDonNhapKho.Entity;
				if (((previousValue != value) 
							|| (this._HoaDonNhapKho.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HoaDonNhapKho.Entity = null;
						previousValue.ChiTietHoaDonNhapKhos.Remove(this);
					}
					this._HoaDonNhapKho.Entity = value;
					if ((value != null))
					{
						value.ChiTietHoaDonNhapKhos.Add(this);
						this._IdHoaDonNhapKho = value.IdHoaDonNhapKho;
					}
					else
					{
						this._IdHoaDonNhapKho = default(long);
					}
					this.SendPropertyChanged("HoaDonNhapKho");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SanPham_ChiTietHoaDonNhapKho", Storage="_SanPham", ThisKey="IdSanPham", OtherKey="IdSanPham", IsForeignKey=true)]
		public SanPham SanPham
		{
			get
			{
				return this._SanPham.Entity;
			}
			set
			{
				SanPham previousValue = this._SanPham.Entity;
				if (((previousValue != value) 
							|| (this._SanPham.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SanPham.Entity = null;
						previousValue.ChiTietHoaDonNhapKhos.Remove(this);
					}
					this._SanPham.Entity = value;
					if ((value != null))
					{
						value.ChiTietHoaDonNhapKhos.Add(this);
						this._IdSanPham = value.IdSanPham;
					}
					else
					{
						this._IdSanPham = default(long);
					}
					this.SendPropertyChanged("SanPham");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DanhGiaSanPham")]
	public partial class DanhGiaSanPham
	{
		
		private long _IdDanhGia;
		
		private long _IdSanPham;
		
		private long _IdKhachHang;
		
		private int _DiemDanhGia;
		
		private string _NhanXet;
		
		private System.DateTime _ThoiGianDanhGia;
		
		public DanhGiaSanPham()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdDanhGia", AutoSync=AutoSync.Always, DbType="BigInt NOT NULL IDENTITY", IsDbGenerated=true)]
		public long IdDanhGia
		{
			get
			{
				return this._IdDanhGia;
			}
			set
			{
				if ((this._IdDanhGia != value))
				{
					this._IdDanhGia = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdSanPham", DbType="BigInt NOT NULL")]
		public long IdSanPham
		{
			get
			{
				return this._IdSanPham;
			}
			set
			{
				if ((this._IdSanPham != value))
				{
					this._IdSanPham = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdKhachHang", DbType="BigInt NOT NULL")]
		public long IdKhachHang
		{
			get
			{
				return this._IdKhachHang;
			}
			set
			{
				if ((this._IdKhachHang != value))
				{
					this._IdKhachHang = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiemDanhGia", DbType="Int NOT NULL")]
		public int DiemDanhGia
		{
			get
			{
				return this._DiemDanhGia;
			}
			set
			{
				if ((this._DiemDanhGia != value))
				{
					this._DiemDanhGia = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NhanXet", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string NhanXet
		{
			get
			{
				return this._NhanXet;
			}
			set
			{
				if ((this._NhanXet != value))
				{
					this._NhanXet = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThoiGianDanhGia", DbType="DateTime NOT NULL")]
		public System.DateTime ThoiGianDanhGia
		{
			get
			{
				return this._ThoiGianDanhGia;
			}
			set
			{
				if ((this._ThoiGianDanhGia != value))
				{
					this._ThoiGianDanhGia = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DonHang")]
	public partial class DonHang : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _IdDonHang;
		
		private long _IdKhachHang;
		
		private string _SoDienThoai;
		
		private string _DiaChiGiaoHang;
		
		private string _PhuongThucThanhToan;
		
		private System.DateTime _ThoiGianDatHang;
		
		private System.DateTime _ThoiGianGiaoHangDuKien;
		
		private string _TrangThaiDonHang;
		
		private string _TrangThaiThanhToan;
		
		private EntitySet<ChiTietDonHang> _ChiTietDonHangs;
		
		private EntityRef<KhachHang> _KhachHang;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdDonHangChanging(long value);
    partial void OnIdDonHangChanged();
    partial void OnIdKhachHangChanging(long value);
    partial void OnIdKhachHangChanged();
    partial void OnSoDienThoaiChanging(string value);
    partial void OnSoDienThoaiChanged();
    partial void OnDiaChiGiaoHangChanging(string value);
    partial void OnDiaChiGiaoHangChanged();
    partial void OnPhuongThucThanhToanChanging(string value);
    partial void OnPhuongThucThanhToanChanged();
    partial void OnThoiGianDatHangChanging(System.DateTime value);
    partial void OnThoiGianDatHangChanged();
    partial void OnThoiGianGiaoHangDuKienChanging(System.DateTime value);
    partial void OnThoiGianGiaoHangDuKienChanged();
    partial void OnTrangThaiDonHangChanging(string value);
    partial void OnTrangThaiDonHangChanged();
    partial void OnTrangThaiThanhToanChanging(string value);
    partial void OnTrangThaiThanhToanChanged();
    #endregion
		
		public DonHang()
		{
			this._ChiTietDonHangs = new EntitySet<ChiTietDonHang>(new Action<ChiTietDonHang>(this.attach_ChiTietDonHangs), new Action<ChiTietDonHang>(this.detach_ChiTietDonHangs));
			this._KhachHang = default(EntityRef<KhachHang>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdDonHang", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long IdDonHang
		{
			get
			{
				return this._IdDonHang;
			}
			set
			{
				if ((this._IdDonHang != value))
				{
					this.OnIdDonHangChanging(value);
					this.SendPropertyChanging();
					this._IdDonHang = value;
					this.SendPropertyChanged("IdDonHang");
					this.OnIdDonHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdKhachHang", DbType="BigInt NOT NULL")]
		public long IdKhachHang
		{
			get
			{
				return this._IdKhachHang;
			}
			set
			{
				if ((this._IdKhachHang != value))
				{
					if (this._KhachHang.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdKhachHangChanging(value);
					this.SendPropertyChanging();
					this._IdKhachHang = value;
					this.SendPropertyChanged("IdKhachHang");
					this.OnIdKhachHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoDienThoai", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string SoDienThoai
		{
			get
			{
				return this._SoDienThoai;
			}
			set
			{
				if ((this._SoDienThoai != value))
				{
					this.OnSoDienThoaiChanging(value);
					this.SendPropertyChanging();
					this._SoDienThoai = value;
					this.SendPropertyChanged("SoDienThoai");
					this.OnSoDienThoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaChiGiaoHang", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string DiaChiGiaoHang
		{
			get
			{
				return this._DiaChiGiaoHang;
			}
			set
			{
				if ((this._DiaChiGiaoHang != value))
				{
					this.OnDiaChiGiaoHangChanging(value);
					this.SendPropertyChanging();
					this._DiaChiGiaoHang = value;
					this.SendPropertyChanged("DiaChiGiaoHang");
					this.OnDiaChiGiaoHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhuongThucThanhToan", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string PhuongThucThanhToan
		{
			get
			{
				return this._PhuongThucThanhToan;
			}
			set
			{
				if ((this._PhuongThucThanhToan != value))
				{
					this.OnPhuongThucThanhToanChanging(value);
					this.SendPropertyChanging();
					this._PhuongThucThanhToan = value;
					this.SendPropertyChanged("PhuongThucThanhToan");
					this.OnPhuongThucThanhToanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThoiGianDatHang", DbType="DateTime NOT NULL")]
		public System.DateTime ThoiGianDatHang
		{
			get
			{
				return this._ThoiGianDatHang;
			}
			set
			{
				if ((this._ThoiGianDatHang != value))
				{
					this.OnThoiGianDatHangChanging(value);
					this.SendPropertyChanging();
					this._ThoiGianDatHang = value;
					this.SendPropertyChanged("ThoiGianDatHang");
					this.OnThoiGianDatHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThoiGianGiaoHangDuKien", DbType="DateTime NOT NULL")]
		public System.DateTime ThoiGianGiaoHangDuKien
		{
			get
			{
				return this._ThoiGianGiaoHangDuKien;
			}
			set
			{
				if ((this._ThoiGianGiaoHangDuKien != value))
				{
					this.OnThoiGianGiaoHangDuKienChanging(value);
					this.SendPropertyChanging();
					this._ThoiGianGiaoHangDuKien = value;
					this.SendPropertyChanged("ThoiGianGiaoHangDuKien");
					this.OnThoiGianGiaoHangDuKienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrangThaiDonHang", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string TrangThaiDonHang
		{
			get
			{
				return this._TrangThaiDonHang;
			}
			set
			{
				if ((this._TrangThaiDonHang != value))
				{
					this.OnTrangThaiDonHangChanging(value);
					this.SendPropertyChanging();
					this._TrangThaiDonHang = value;
					this.SendPropertyChanged("TrangThaiDonHang");
					this.OnTrangThaiDonHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrangThaiThanhToan", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string TrangThaiThanhToan
		{
			get
			{
				return this._TrangThaiThanhToan;
			}
			set
			{
				if ((this._TrangThaiThanhToan != value))
				{
					this.OnTrangThaiThanhToanChanging(value);
					this.SendPropertyChanging();
					this._TrangThaiThanhToan = value;
					this.SendPropertyChanged("TrangThaiThanhToan");
					this.OnTrangThaiThanhToanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DonHang_ChiTietDonHang", Storage="_ChiTietDonHangs", ThisKey="IdDonHang", OtherKey="IdDonHang")]
		public EntitySet<ChiTietDonHang> ChiTietDonHangs
		{
			get
			{
				return this._ChiTietDonHangs;
			}
			set
			{
				this._ChiTietDonHangs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KhachHang_DonHang", Storage="_KhachHang", ThisKey="IdKhachHang", OtherKey="IdKhachHang", IsForeignKey=true)]
		public KhachHang KhachHang
		{
			get
			{
				return this._KhachHang.Entity;
			}
			set
			{
				KhachHang previousValue = this._KhachHang.Entity;
				if (((previousValue != value) 
							|| (this._KhachHang.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KhachHang.Entity = null;
						previousValue.DonHangs.Remove(this);
					}
					this._KhachHang.Entity = value;
					if ((value != null))
					{
						value.DonHangs.Add(this);
						this._IdKhachHang = value.IdKhachHang;
					}
					else
					{
						this._IdKhachHang = default(long);
					}
					this.SendPropertyChanged("KhachHang");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ChiTietDonHangs(ChiTietDonHang entity)
		{
			this.SendPropertyChanging();
			entity.DonHang = this;
		}
		
		private void detach_ChiTietDonHangs(ChiTietDonHang entity)
		{
			this.SendPropertyChanging();
			entity.DonHang = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HoaDon")]
	public partial class HoaDon : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _IdHoaDon;
		
		private long _IdNhanVien;
		
		private int _IdChiNhanh;
		
		private string _SoDienThoai;
		
		private string _PhuongThucThanhToan;
		
		private System.DateTime _NgayXuatHD;
		
		private EntitySet<ChiTietHoaDon> _ChiTietHoaDons;
		
		private EntityRef<ChiNhanh> _ChiNhanh;
		
		private EntityRef<NhanVien> _NhanVien;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdHoaDonChanging(long value);
    partial void OnIdHoaDonChanged();
    partial void OnIdNhanVienChanging(long value);
    partial void OnIdNhanVienChanged();
    partial void OnIdChiNhanhChanging(int value);
    partial void OnIdChiNhanhChanged();
    partial void OnSoDienThoaiChanging(string value);
    partial void OnSoDienThoaiChanged();
    partial void OnPhuongThucThanhToanChanging(string value);
    partial void OnPhuongThucThanhToanChanged();
    partial void OnNgayXuatHDChanging(System.DateTime value);
    partial void OnNgayXuatHDChanged();
    #endregion
		
		public HoaDon()
		{
			this._ChiTietHoaDons = new EntitySet<ChiTietHoaDon>(new Action<ChiTietHoaDon>(this.attach_ChiTietHoaDons), new Action<ChiTietHoaDon>(this.detach_ChiTietHoaDons));
			this._ChiNhanh = default(EntityRef<ChiNhanh>);
			this._NhanVien = default(EntityRef<NhanVien>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdHoaDon", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long IdHoaDon
		{
			get
			{
				return this._IdHoaDon;
			}
			set
			{
				if ((this._IdHoaDon != value))
				{
					this.OnIdHoaDonChanging(value);
					this.SendPropertyChanging();
					this._IdHoaDon = value;
					this.SendPropertyChanged("IdHoaDon");
					this.OnIdHoaDonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdNhanVien", DbType="BigInt NOT NULL")]
		public long IdNhanVien
		{
			get
			{
				return this._IdNhanVien;
			}
			set
			{
				if ((this._IdNhanVien != value))
				{
					if (this._NhanVien.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdNhanVienChanging(value);
					this.SendPropertyChanging();
					this._IdNhanVien = value;
					this.SendPropertyChanged("IdNhanVien");
					this.OnIdNhanVienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdChiNhanh", DbType="Int NOT NULL")]
		public int IdChiNhanh
		{
			get
			{
				return this._IdChiNhanh;
			}
			set
			{
				if ((this._IdChiNhanh != value))
				{
					if (this._ChiNhanh.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdChiNhanhChanging(value);
					this.SendPropertyChanging();
					this._IdChiNhanh = value;
					this.SendPropertyChanged("IdChiNhanh");
					this.OnIdChiNhanhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoDienThoai", DbType="VarChar(10)")]
		public string SoDienThoai
		{
			get
			{
				return this._SoDienThoai;
			}
			set
			{
				if ((this._SoDienThoai != value))
				{
					this.OnSoDienThoaiChanging(value);
					this.SendPropertyChanging();
					this._SoDienThoai = value;
					this.SendPropertyChanged("SoDienThoai");
					this.OnSoDienThoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhuongThucThanhToan", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string PhuongThucThanhToan
		{
			get
			{
				return this._PhuongThucThanhToan;
			}
			set
			{
				if ((this._PhuongThucThanhToan != value))
				{
					this.OnPhuongThucThanhToanChanging(value);
					this.SendPropertyChanging();
					this._PhuongThucThanhToan = value;
					this.SendPropertyChanged("PhuongThucThanhToan");
					this.OnPhuongThucThanhToanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayXuatHD", DbType="DateTime NOT NULL")]
		public System.DateTime NgayXuatHD
		{
			get
			{
				return this._NgayXuatHD;
			}
			set
			{
				if ((this._NgayXuatHD != value))
				{
					this.OnNgayXuatHDChanging(value);
					this.SendPropertyChanging();
					this._NgayXuatHD = value;
					this.SendPropertyChanged("NgayXuatHD");
					this.OnNgayXuatHDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HoaDon_ChiTietHoaDon", Storage="_ChiTietHoaDons", ThisKey="IdHoaDon", OtherKey="IdHoaDon")]
		public EntitySet<ChiTietHoaDon> ChiTietHoaDons
		{
			get
			{
				return this._ChiTietHoaDons;
			}
			set
			{
				this._ChiTietHoaDons.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ChiNhanh_HoaDon", Storage="_ChiNhanh", ThisKey="IdChiNhanh", OtherKey="IdChiNhanh", IsForeignKey=true)]
		public ChiNhanh ChiNhanh
		{
			get
			{
				return this._ChiNhanh.Entity;
			}
			set
			{
				ChiNhanh previousValue = this._ChiNhanh.Entity;
				if (((previousValue != value) 
							|| (this._ChiNhanh.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ChiNhanh.Entity = null;
						previousValue.HoaDons.Remove(this);
					}
					this._ChiNhanh.Entity = value;
					if ((value != null))
					{
						value.HoaDons.Add(this);
						this._IdChiNhanh = value.IdChiNhanh;
					}
					else
					{
						this._IdChiNhanh = default(int);
					}
					this.SendPropertyChanged("ChiNhanh");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhanVien_HoaDon", Storage="_NhanVien", ThisKey="IdNhanVien", OtherKey="IdNhanVien", IsForeignKey=true)]
		public NhanVien NhanVien
		{
			get
			{
				return this._NhanVien.Entity;
			}
			set
			{
				NhanVien previousValue = this._NhanVien.Entity;
				if (((previousValue != value) 
							|| (this._NhanVien.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NhanVien.Entity = null;
						previousValue.HoaDons.Remove(this);
					}
					this._NhanVien.Entity = value;
					if ((value != null))
					{
						value.HoaDons.Add(this);
						this._IdNhanVien = value.IdNhanVien;
					}
					else
					{
						this._IdNhanVien = default(long);
					}
					this.SendPropertyChanged("NhanVien");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ChiTietHoaDons(ChiTietHoaDon entity)
		{
			this.SendPropertyChanging();
			entity.HoaDon = this;
		}
		
		private void detach_ChiTietHoaDons(ChiTietHoaDon entity)
		{
			this.SendPropertyChanging();
			entity.HoaDon = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HoaDonNhapKho")]
	public partial class HoaDonNhapKho : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _IdHoaDonNhapKho;
		
		private System.DateTime _NgayNhap;
		
		private long _IdNhanVien;
		
		private int _IdChiNhanh;
		
		private EntitySet<ChiTietHoaDonNhapKho> _ChiTietHoaDonNhapKhos;
		
		private EntityRef<ChiNhanh> _ChiNhanh;
		
		private EntityRef<NhanVien> _NhanVien;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdHoaDonNhapKhoChanging(long value);
    partial void OnIdHoaDonNhapKhoChanged();
    partial void OnNgayNhapChanging(System.DateTime value);
    partial void OnNgayNhapChanged();
    partial void OnIdNhanVienChanging(long value);
    partial void OnIdNhanVienChanged();
    partial void OnIdChiNhanhChanging(int value);
    partial void OnIdChiNhanhChanged();
    #endregion
		
		public HoaDonNhapKho()
		{
			this._ChiTietHoaDonNhapKhos = new EntitySet<ChiTietHoaDonNhapKho>(new Action<ChiTietHoaDonNhapKho>(this.attach_ChiTietHoaDonNhapKhos), new Action<ChiTietHoaDonNhapKho>(this.detach_ChiTietHoaDonNhapKhos));
			this._ChiNhanh = default(EntityRef<ChiNhanh>);
			this._NhanVien = default(EntityRef<NhanVien>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdHoaDonNhapKho", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long IdHoaDonNhapKho
		{
			get
			{
				return this._IdHoaDonNhapKho;
			}
			set
			{
				if ((this._IdHoaDonNhapKho != value))
				{
					this.OnIdHoaDonNhapKhoChanging(value);
					this.SendPropertyChanging();
					this._IdHoaDonNhapKho = value;
					this.SendPropertyChanged("IdHoaDonNhapKho");
					this.OnIdHoaDonNhapKhoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayNhap", DbType="DateTime NOT NULL")]
		public System.DateTime NgayNhap
		{
			get
			{
				return this._NgayNhap;
			}
			set
			{
				if ((this._NgayNhap != value))
				{
					this.OnNgayNhapChanging(value);
					this.SendPropertyChanging();
					this._NgayNhap = value;
					this.SendPropertyChanged("NgayNhap");
					this.OnNgayNhapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdNhanVien", DbType="BigInt NOT NULL")]
		public long IdNhanVien
		{
			get
			{
				return this._IdNhanVien;
			}
			set
			{
				if ((this._IdNhanVien != value))
				{
					if (this._NhanVien.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdNhanVienChanging(value);
					this.SendPropertyChanging();
					this._IdNhanVien = value;
					this.SendPropertyChanged("IdNhanVien");
					this.OnIdNhanVienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdChiNhanh", DbType="Int NOT NULL")]
		public int IdChiNhanh
		{
			get
			{
				return this._IdChiNhanh;
			}
			set
			{
				if ((this._IdChiNhanh != value))
				{
					if (this._ChiNhanh.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdChiNhanhChanging(value);
					this.SendPropertyChanging();
					this._IdChiNhanh = value;
					this.SendPropertyChanged("IdChiNhanh");
					this.OnIdChiNhanhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HoaDonNhapKho_ChiTietHoaDonNhapKho", Storage="_ChiTietHoaDonNhapKhos", ThisKey="IdHoaDonNhapKho", OtherKey="IdHoaDonNhapKho")]
		public EntitySet<ChiTietHoaDonNhapKho> ChiTietHoaDonNhapKhos
		{
			get
			{
				return this._ChiTietHoaDonNhapKhos;
			}
			set
			{
				this._ChiTietHoaDonNhapKhos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ChiNhanh_HoaDonNhapKho", Storage="_ChiNhanh", ThisKey="IdChiNhanh", OtherKey="IdChiNhanh", IsForeignKey=true)]
		public ChiNhanh ChiNhanh
		{
			get
			{
				return this._ChiNhanh.Entity;
			}
			set
			{
				ChiNhanh previousValue = this._ChiNhanh.Entity;
				if (((previousValue != value) 
							|| (this._ChiNhanh.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ChiNhanh.Entity = null;
						previousValue.HoaDonNhapKhos.Remove(this);
					}
					this._ChiNhanh.Entity = value;
					if ((value != null))
					{
						value.HoaDonNhapKhos.Add(this);
						this._IdChiNhanh = value.IdChiNhanh;
					}
					else
					{
						this._IdChiNhanh = default(int);
					}
					this.SendPropertyChanged("ChiNhanh");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhanVien_HoaDonNhapKho", Storage="_NhanVien", ThisKey="IdNhanVien", OtherKey="IdNhanVien", IsForeignKey=true)]
		public NhanVien NhanVien
		{
			get
			{
				return this._NhanVien.Entity;
			}
			set
			{
				NhanVien previousValue = this._NhanVien.Entity;
				if (((previousValue != value) 
							|| (this._NhanVien.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NhanVien.Entity = null;
						previousValue.HoaDonNhapKhos.Remove(this);
					}
					this._NhanVien.Entity = value;
					if ((value != null))
					{
						value.HoaDonNhapKhos.Add(this);
						this._IdNhanVien = value.IdNhanVien;
					}
					else
					{
						this._IdNhanVien = default(long);
					}
					this.SendPropertyChanged("NhanVien");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ChiTietHoaDonNhapKhos(ChiTietHoaDonNhapKho entity)
		{
			this.SendPropertyChanging();
			entity.HoaDonNhapKho = this;
		}
		
		private void detach_ChiTietHoaDonNhapKhos(ChiTietHoaDonNhapKho entity)
		{
			this.SendPropertyChanging();
			entity.HoaDonNhapKho = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KhachHang")]
	public partial class KhachHang : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _IdKhachHang;
		
		private long _IdNguoiDung;
		
		private string _TenKhachHang;
		
		private System.Nullable<System.DateTime> _NgaySinh;
		
		private string _GioiTinh;
		
		private string _DiaChi;
		
		private string _SoDienThoai;
		
		private string _Email;
		
		private EntitySet<DonHang> _DonHangs;
		
		private EntitySet<PhanHoi> _PhanHois;
		
		private EntityRef<NguoiDung> _NguoiDung;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdKhachHangChanging(long value);
    partial void OnIdKhachHangChanged();
    partial void OnIdNguoiDungChanging(long value);
    partial void OnIdNguoiDungChanged();
    partial void OnTenKhachHangChanging(string value);
    partial void OnTenKhachHangChanged();
    partial void OnNgaySinhChanging(System.Nullable<System.DateTime> value);
    partial void OnNgaySinhChanged();
    partial void OnGioiTinhChanging(string value);
    partial void OnGioiTinhChanged();
    partial void OnDiaChiChanging(string value);
    partial void OnDiaChiChanged();
    partial void OnSoDienThoaiChanging(string value);
    partial void OnSoDienThoaiChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    #endregion
		
		public KhachHang()
		{
			this._DonHangs = new EntitySet<DonHang>(new Action<DonHang>(this.attach_DonHangs), new Action<DonHang>(this.detach_DonHangs));
			this._PhanHois = new EntitySet<PhanHoi>(new Action<PhanHoi>(this.attach_PhanHois), new Action<PhanHoi>(this.detach_PhanHois));
			this._NguoiDung = default(EntityRef<NguoiDung>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdKhachHang", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long IdKhachHang
		{
			get
			{
				return this._IdKhachHang;
			}
			set
			{
				if ((this._IdKhachHang != value))
				{
					this.OnIdKhachHangChanging(value);
					this.SendPropertyChanging();
					this._IdKhachHang = value;
					this.SendPropertyChanged("IdKhachHang");
					this.OnIdKhachHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdNguoiDung", DbType="BigInt NOT NULL")]
		public long IdNguoiDung
		{
			get
			{
				return this._IdNguoiDung;
			}
			set
			{
				if ((this._IdNguoiDung != value))
				{
					if (this._NguoiDung.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdNguoiDungChanging(value);
					this.SendPropertyChanging();
					this._IdNguoiDung = value;
					this.SendPropertyChanged("IdNguoiDung");
					this.OnIdNguoiDungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenKhachHang", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string TenKhachHang
		{
			get
			{
				return this._TenKhachHang;
			}
			set
			{
				if ((this._TenKhachHang != value))
				{
					this.OnTenKhachHangChanging(value);
					this.SendPropertyChanging();
					this._TenKhachHang = value;
					this.SendPropertyChanged("TenKhachHang");
					this.OnTenKhachHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgaySinh", DbType="Date")]
		public System.Nullable<System.DateTime> NgaySinh
		{
			get
			{
				return this._NgaySinh;
			}
			set
			{
				if ((this._NgaySinh != value))
				{
					this.OnNgaySinhChanging(value);
					this.SendPropertyChanging();
					this._NgaySinh = value;
					this.SendPropertyChanged("NgaySinh");
					this.OnNgaySinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GioiTinh", DbType="NChar(5)")]
		public string GioiTinh
		{
			get
			{
				return this._GioiTinh;
			}
			set
			{
				if ((this._GioiTinh != value))
				{
					this.OnGioiTinhChanging(value);
					this.SendPropertyChanging();
					this._GioiTinh = value;
					this.SendPropertyChanged("GioiTinh");
					this.OnGioiTinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaChi", DbType="NVarChar(255)")]
		public string DiaChi
		{
			get
			{
				return this._DiaChi;
			}
			set
			{
				if ((this._DiaChi != value))
				{
					this.OnDiaChiChanging(value);
					this.SendPropertyChanging();
					this._DiaChi = value;
					this.SendPropertyChanged("DiaChi");
					this.OnDiaChiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoDienThoai", DbType="Char(10)")]
		public string SoDienThoai
		{
			get
			{
				return this._SoDienThoai;
			}
			set
			{
				if ((this._SoDienThoai != value))
				{
					this.OnSoDienThoaiChanging(value);
					this.SendPropertyChanging();
					this._SoDienThoai = value;
					this.SendPropertyChanged("SoDienThoai");
					this.OnSoDienThoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(100)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KhachHang_DonHang", Storage="_DonHangs", ThisKey="IdKhachHang", OtherKey="IdKhachHang")]
		public EntitySet<DonHang> DonHangs
		{
			get
			{
				return this._DonHangs;
			}
			set
			{
				this._DonHangs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KhachHang_PhanHoi", Storage="_PhanHois", ThisKey="IdKhachHang", OtherKey="IdKhachHang")]
		public EntitySet<PhanHoi> PhanHois
		{
			get
			{
				return this._PhanHois;
			}
			set
			{
				this._PhanHois.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NguoiDung_KhachHang", Storage="_NguoiDung", ThisKey="IdNguoiDung", OtherKey="IdNguoiDung", IsForeignKey=true)]
		public NguoiDung NguoiDung
		{
			get
			{
				return this._NguoiDung.Entity;
			}
			set
			{
				NguoiDung previousValue = this._NguoiDung.Entity;
				if (((previousValue != value) 
							|| (this._NguoiDung.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NguoiDung.Entity = null;
						previousValue.KhachHangs.Remove(this);
					}
					this._NguoiDung.Entity = value;
					if ((value != null))
					{
						value.KhachHangs.Add(this);
						this._IdNguoiDung = value.IdNguoiDung;
					}
					else
					{
						this._IdNguoiDung = default(long);
					}
					this.SendPropertyChanged("NguoiDung");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DonHangs(DonHang entity)
		{
			this.SendPropertyChanging();
			entity.KhachHang = this;
		}
		
		private void detach_DonHangs(DonHang entity)
		{
			this.SendPropertyChanging();
			entity.KhachHang = null;
		}
		
		private void attach_PhanHois(PhanHoi entity)
		{
			this.SendPropertyChanging();
			entity.KhachHang = this;
		}
		
		private void detach_PhanHois(PhanHoi entity)
		{
			this.SendPropertyChanging();
			entity.KhachHang = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Kho")]
	public partial class Kho : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdChiNhanh;
		
		private long _IdSanPham;
		
		private int _SoLuongTonKho;
		
		private EntityRef<ChiNhanh> _ChiNhanh;
		
		private EntityRef<SanPham> _SanPham;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChiNhanhChanging(int value);
    partial void OnIdChiNhanhChanged();
    partial void OnIdSanPhamChanging(long value);
    partial void OnIdSanPhamChanged();
    partial void OnSoLuongTonKhoChanging(int value);
    partial void OnSoLuongTonKhoChanged();
    #endregion
		
		public Kho()
		{
			this._ChiNhanh = default(EntityRef<ChiNhanh>);
			this._SanPham = default(EntityRef<SanPham>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdChiNhanh", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IdChiNhanh
		{
			get
			{
				return this._IdChiNhanh;
			}
			set
			{
				if ((this._IdChiNhanh != value))
				{
					if (this._ChiNhanh.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdChiNhanhChanging(value);
					this.SendPropertyChanging();
					this._IdChiNhanh = value;
					this.SendPropertyChanged("IdChiNhanh");
					this.OnIdChiNhanhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdSanPham", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long IdSanPham
		{
			get
			{
				return this._IdSanPham;
			}
			set
			{
				if ((this._IdSanPham != value))
				{
					if (this._SanPham.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdSanPhamChanging(value);
					this.SendPropertyChanging();
					this._IdSanPham = value;
					this.SendPropertyChanged("IdSanPham");
					this.OnIdSanPhamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLuongTonKho", DbType="Int NOT NULL")]
		public int SoLuongTonKho
		{
			get
			{
				return this._SoLuongTonKho;
			}
			set
			{
				if ((this._SoLuongTonKho != value))
				{
					this.OnSoLuongTonKhoChanging(value);
					this.SendPropertyChanging();
					this._SoLuongTonKho = value;
					this.SendPropertyChanged("SoLuongTonKho");
					this.OnSoLuongTonKhoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ChiNhanh_Kho", Storage="_ChiNhanh", ThisKey="IdChiNhanh", OtherKey="IdChiNhanh", IsForeignKey=true)]
		public ChiNhanh ChiNhanh
		{
			get
			{
				return this._ChiNhanh.Entity;
			}
			set
			{
				ChiNhanh previousValue = this._ChiNhanh.Entity;
				if (((previousValue != value) 
							|| (this._ChiNhanh.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ChiNhanh.Entity = null;
						previousValue.Khos.Remove(this);
					}
					this._ChiNhanh.Entity = value;
					if ((value != null))
					{
						value.Khos.Add(this);
						this._IdChiNhanh = value.IdChiNhanh;
					}
					else
					{
						this._IdChiNhanh = default(int);
					}
					this.SendPropertyChanged("ChiNhanh");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SanPham_Kho", Storage="_SanPham", ThisKey="IdSanPham", OtherKey="IdSanPham", IsForeignKey=true)]
		public SanPham SanPham
		{
			get
			{
				return this._SanPham.Entity;
			}
			set
			{
				SanPham previousValue = this._SanPham.Entity;
				if (((previousValue != value) 
							|| (this._SanPham.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SanPham.Entity = null;
						previousValue.Khos.Remove(this);
					}
					this._SanPham.Entity = value;
					if ((value != null))
					{
						value.Khos.Add(this);
						this._IdSanPham = value.IdSanPham;
					}
					else
					{
						this._IdSanPham = default(long);
					}
					this.SendPropertyChanged("SanPham");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LoaiSanPham")]
	public partial class LoaiSanPham : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdLoaiSP;
		
		private string _TenLoaiSP;
		
		private System.Nullable<int> _IdLoaiSPCha;
		
		private EntitySet<SanPham> _SanPhams;
		
		private EntityRef<LoaiSanPhamCha> _LoaiSanPhamCha;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdLoaiSPChanging(int value);
    partial void OnIdLoaiSPChanged();
    partial void OnTenLoaiSPChanging(string value);
    partial void OnTenLoaiSPChanged();
    partial void OnIdLoaiSPChaChanging(System.Nullable<int> value);
    partial void OnIdLoaiSPChaChanged();
    #endregion
		
		public LoaiSanPham()
		{
			this._SanPhams = new EntitySet<SanPham>(new Action<SanPham>(this.attach_SanPhams), new Action<SanPham>(this.detach_SanPhams));
			this._LoaiSanPhamCha = default(EntityRef<LoaiSanPhamCha>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdLoaiSP", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdLoaiSP
		{
			get
			{
				return this._IdLoaiSP;
			}
			set
			{
				if ((this._IdLoaiSP != value))
				{
					this.OnIdLoaiSPChanging(value);
					this.SendPropertyChanging();
					this._IdLoaiSP = value;
					this.SendPropertyChanged("IdLoaiSP");
					this.OnIdLoaiSPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenLoaiSP", DbType="NVarChar(255)")]
		public string TenLoaiSP
		{
			get
			{
				return this._TenLoaiSP;
			}
			set
			{
				if ((this._TenLoaiSP != value))
				{
					this.OnTenLoaiSPChanging(value);
					this.SendPropertyChanging();
					this._TenLoaiSP = value;
					this.SendPropertyChanged("TenLoaiSP");
					this.OnTenLoaiSPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdLoaiSPCha", DbType="Int")]
		public System.Nullable<int> IdLoaiSPCha
		{
			get
			{
				return this._IdLoaiSPCha;
			}
			set
			{
				if ((this._IdLoaiSPCha != value))
				{
					if (this._LoaiSanPhamCha.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdLoaiSPChaChanging(value);
					this.SendPropertyChanging();
					this._IdLoaiSPCha = value;
					this.SendPropertyChanged("IdLoaiSPCha");
					this.OnIdLoaiSPChaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LoaiSanPham_SanPham", Storage="_SanPhams", ThisKey="IdLoaiSP", OtherKey="IdLoaiSP")]
		public EntitySet<SanPham> SanPhams
		{
			get
			{
				return this._SanPhams;
			}
			set
			{
				this._SanPhams.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LoaiSanPhamCha_LoaiSanPham", Storage="_LoaiSanPhamCha", ThisKey="IdLoaiSPCha", OtherKey="IdLoaiSPCha", IsForeignKey=true)]
		public LoaiSanPhamCha LoaiSanPhamCha
		{
			get
			{
				return this._LoaiSanPhamCha.Entity;
			}
			set
			{
				LoaiSanPhamCha previousValue = this._LoaiSanPhamCha.Entity;
				if (((previousValue != value) 
							|| (this._LoaiSanPhamCha.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LoaiSanPhamCha.Entity = null;
						previousValue.LoaiSanPhams.Remove(this);
					}
					this._LoaiSanPhamCha.Entity = value;
					if ((value != null))
					{
						value.LoaiSanPhams.Add(this);
						this._IdLoaiSPCha = value.IdLoaiSPCha;
					}
					else
					{
						this._IdLoaiSPCha = default(Nullable<int>);
					}
					this.SendPropertyChanged("LoaiSanPhamCha");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SanPhams(SanPham entity)
		{
			this.SendPropertyChanging();
			entity.LoaiSanPham = this;
		}
		
		private void detach_SanPhams(SanPham entity)
		{
			this.SendPropertyChanging();
			entity.LoaiSanPham = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LoaiSanPhamCha")]
	public partial class LoaiSanPhamCha : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdLoaiSPCha;
		
		private string _TenLoaiSPCha;
		
		private EntitySet<LoaiSanPham> _LoaiSanPhams;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdLoaiSPChaChanging(int value);
    partial void OnIdLoaiSPChaChanged();
    partial void OnTenLoaiSPChaChanging(string value);
    partial void OnTenLoaiSPChaChanged();
    #endregion
		
		public LoaiSanPhamCha()
		{
			this._LoaiSanPhams = new EntitySet<LoaiSanPham>(new Action<LoaiSanPham>(this.attach_LoaiSanPhams), new Action<LoaiSanPham>(this.detach_LoaiSanPhams));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdLoaiSPCha", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdLoaiSPCha
		{
			get
			{
				return this._IdLoaiSPCha;
			}
			set
			{
				if ((this._IdLoaiSPCha != value))
				{
					this.OnIdLoaiSPChaChanging(value);
					this.SendPropertyChanging();
					this._IdLoaiSPCha = value;
					this.SendPropertyChanged("IdLoaiSPCha");
					this.OnIdLoaiSPChaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenLoaiSPCha", DbType="NVarChar(255)")]
		public string TenLoaiSPCha
		{
			get
			{
				return this._TenLoaiSPCha;
			}
			set
			{
				if ((this._TenLoaiSPCha != value))
				{
					this.OnTenLoaiSPChaChanging(value);
					this.SendPropertyChanging();
					this._TenLoaiSPCha = value;
					this.SendPropertyChanged("TenLoaiSPCha");
					this.OnTenLoaiSPChaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LoaiSanPhamCha_LoaiSanPham", Storage="_LoaiSanPhams", ThisKey="IdLoaiSPCha", OtherKey="IdLoaiSPCha")]
		public EntitySet<LoaiSanPham> LoaiSanPhams
		{
			get
			{
				return this._LoaiSanPhams;
			}
			set
			{
				this._LoaiSanPhams.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_LoaiSanPhams(LoaiSanPham entity)
		{
			this.SendPropertyChanging();
			entity.LoaiSanPhamCha = this;
		}
		
		private void detach_LoaiSanPhams(LoaiSanPham entity)
		{
			this.SendPropertyChanging();
			entity.LoaiSanPhamCha = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NguoiDung")]
	public partial class NguoiDung : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _IdNguoiDung;
		
		private string _TenTaiKhoan;
		
		private string _MatKhau;
		
		private int _IdVaiTro;
		
		private bool _TonTai;
		
		private bool _Cam;
		
		private EntitySet<KhachHang> _KhachHangs;
		
		private EntitySet<NhanVien> _NhanViens;
		
		private EntityRef<VaiTro> _VaiTro;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdNguoiDungChanging(long value);
    partial void OnIdNguoiDungChanged();
    partial void OnTenTaiKhoanChanging(string value);
    partial void OnTenTaiKhoanChanged();
    partial void OnMatKhauChanging(string value);
    partial void OnMatKhauChanged();
    partial void OnIdVaiTroChanging(int value);
    partial void OnIdVaiTroChanged();
    partial void OnTonTaiChanging(bool value);
    partial void OnTonTaiChanged();
    partial void OnCamChanging(bool value);
    partial void OnCamChanged();
    #endregion
		
		public NguoiDung()
		{
			this._KhachHangs = new EntitySet<KhachHang>(new Action<KhachHang>(this.attach_KhachHangs), new Action<KhachHang>(this.detach_KhachHangs));
			this._NhanViens = new EntitySet<NhanVien>(new Action<NhanVien>(this.attach_NhanViens), new Action<NhanVien>(this.detach_NhanViens));
			this._VaiTro = default(EntityRef<VaiTro>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdNguoiDung", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long IdNguoiDung
		{
			get
			{
				return this._IdNguoiDung;
			}
			set
			{
				if ((this._IdNguoiDung != value))
				{
					this.OnIdNguoiDungChanging(value);
					this.SendPropertyChanging();
					this._IdNguoiDung = value;
					this.SendPropertyChanged("IdNguoiDung");
					this.OnIdNguoiDungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenTaiKhoan", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string TenTaiKhoan
		{
			get
			{
				return this._TenTaiKhoan;
			}
			set
			{
				if ((this._TenTaiKhoan != value))
				{
					this.OnTenTaiKhoanChanging(value);
					this.SendPropertyChanging();
					this._TenTaiKhoan = value;
					this.SendPropertyChanged("TenTaiKhoan");
					this.OnTenTaiKhoanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MatKhau", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string MatKhau
		{
			get
			{
				return this._MatKhau;
			}
			set
			{
				if ((this._MatKhau != value))
				{
					this.OnMatKhauChanging(value);
					this.SendPropertyChanging();
					this._MatKhau = value;
					this.SendPropertyChanged("MatKhau");
					this.OnMatKhauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdVaiTro", DbType="Int NOT NULL")]
		public int IdVaiTro
		{
			get
			{
				return this._IdVaiTro;
			}
			set
			{
				if ((this._IdVaiTro != value))
				{
					if (this._VaiTro.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdVaiTroChanging(value);
					this.SendPropertyChanging();
					this._IdVaiTro = value;
					this.SendPropertyChanged("IdVaiTro");
					this.OnIdVaiTroChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TonTai", DbType="Bit NOT NULL")]
		public bool TonTai
		{
			get
			{
				return this._TonTai;
			}
			set
			{
				if ((this._TonTai != value))
				{
					this.OnTonTaiChanging(value);
					this.SendPropertyChanging();
					this._TonTai = value;
					this.SendPropertyChanged("TonTai");
					this.OnTonTaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cam", DbType="Bit NOT NULL")]
		public bool Cam
		{
			get
			{
				return this._Cam;
			}
			set
			{
				if ((this._Cam != value))
				{
					this.OnCamChanging(value);
					this.SendPropertyChanging();
					this._Cam = value;
					this.SendPropertyChanged("Cam");
					this.OnCamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NguoiDung_KhachHang", Storage="_KhachHangs", ThisKey="IdNguoiDung", OtherKey="IdNguoiDung")]
		public EntitySet<KhachHang> KhachHangs
		{
			get
			{
				return this._KhachHangs;
			}
			set
			{
				this._KhachHangs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NguoiDung_NhanVien", Storage="_NhanViens", ThisKey="IdNguoiDung", OtherKey="IdNguoiDung")]
		public EntitySet<NhanVien> NhanViens
		{
			get
			{
				return this._NhanViens;
			}
			set
			{
				this._NhanViens.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="VaiTro_NguoiDung", Storage="_VaiTro", ThisKey="IdVaiTro", OtherKey="IdVaiTro", IsForeignKey=true)]
		public VaiTro VaiTro
		{
			get
			{
				return this._VaiTro.Entity;
			}
			set
			{
				VaiTro previousValue = this._VaiTro.Entity;
				if (((previousValue != value) 
							|| (this._VaiTro.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._VaiTro.Entity = null;
						previousValue.NguoiDungs.Remove(this);
					}
					this._VaiTro.Entity = value;
					if ((value != null))
					{
						value.NguoiDungs.Add(this);
						this._IdVaiTro = value.IdVaiTro;
					}
					else
					{
						this._IdVaiTro = default(int);
					}
					this.SendPropertyChanged("VaiTro");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_KhachHangs(KhachHang entity)
		{
			this.SendPropertyChanging();
			entity.NguoiDung = this;
		}
		
		private void detach_KhachHangs(KhachHang entity)
		{
			this.SendPropertyChanging();
			entity.NguoiDung = null;
		}
		
		private void attach_NhanViens(NhanVien entity)
		{
			this.SendPropertyChanging();
			entity.NguoiDung = this;
		}
		
		private void detach_NhanViens(NhanVien entity)
		{
			this.SendPropertyChanging();
			entity.NguoiDung = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NhanVien")]
	public partial class NhanVien : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _IdNhanVien;
		
		private long _IdNguoiDung;
		
		private string _TenNhanVien;
		
		private System.Nullable<System.DateTime> _NgaySinh;
		
		private string _GioiTinh;
		
		private string _DiaChi;
		
		private string _SoDienThoai;
		
		private string _Email;
		
		private EntitySet<HoaDon> _HoaDons;
		
		private EntitySet<HoaDonNhapKho> _HoaDonNhapKhos;
		
		private EntityRef<NguoiDung> _NguoiDung;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdNhanVienChanging(long value);
    partial void OnIdNhanVienChanged();
    partial void OnIdNguoiDungChanging(long value);
    partial void OnIdNguoiDungChanged();
    partial void OnTenNhanVienChanging(string value);
    partial void OnTenNhanVienChanged();
    partial void OnNgaySinhChanging(System.Nullable<System.DateTime> value);
    partial void OnNgaySinhChanged();
    partial void OnGioiTinhChanging(string value);
    partial void OnGioiTinhChanged();
    partial void OnDiaChiChanging(string value);
    partial void OnDiaChiChanged();
    partial void OnSoDienThoaiChanging(string value);
    partial void OnSoDienThoaiChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    #endregion
		
		public NhanVien()
		{
			this._HoaDons = new EntitySet<HoaDon>(new Action<HoaDon>(this.attach_HoaDons), new Action<HoaDon>(this.detach_HoaDons));
			this._HoaDonNhapKhos = new EntitySet<HoaDonNhapKho>(new Action<HoaDonNhapKho>(this.attach_HoaDonNhapKhos), new Action<HoaDonNhapKho>(this.detach_HoaDonNhapKhos));
			this._NguoiDung = default(EntityRef<NguoiDung>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdNhanVien", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long IdNhanVien
		{
			get
			{
				return this._IdNhanVien;
			}
			set
			{
				if ((this._IdNhanVien != value))
				{
					this.OnIdNhanVienChanging(value);
					this.SendPropertyChanging();
					this._IdNhanVien = value;
					this.SendPropertyChanged("IdNhanVien");
					this.OnIdNhanVienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdNguoiDung", DbType="BigInt NOT NULL")]
		public long IdNguoiDung
		{
			get
			{
				return this._IdNguoiDung;
			}
			set
			{
				if ((this._IdNguoiDung != value))
				{
					if (this._NguoiDung.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdNguoiDungChanging(value);
					this.SendPropertyChanging();
					this._IdNguoiDung = value;
					this.SendPropertyChanged("IdNguoiDung");
					this.OnIdNguoiDungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenNhanVien", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string TenNhanVien
		{
			get
			{
				return this._TenNhanVien;
			}
			set
			{
				if ((this._TenNhanVien != value))
				{
					this.OnTenNhanVienChanging(value);
					this.SendPropertyChanging();
					this._TenNhanVien = value;
					this.SendPropertyChanged("TenNhanVien");
					this.OnTenNhanVienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgaySinh", DbType="Date")]
		public System.Nullable<System.DateTime> NgaySinh
		{
			get
			{
				return this._NgaySinh;
			}
			set
			{
				if ((this._NgaySinh != value))
				{
					this.OnNgaySinhChanging(value);
					this.SendPropertyChanging();
					this._NgaySinh = value;
					this.SendPropertyChanged("NgaySinh");
					this.OnNgaySinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GioiTinh", DbType="NChar(5)")]
		public string GioiTinh
		{
			get
			{
				return this._GioiTinh;
			}
			set
			{
				if ((this._GioiTinh != value))
				{
					this.OnGioiTinhChanging(value);
					this.SendPropertyChanging();
					this._GioiTinh = value;
					this.SendPropertyChanged("GioiTinh");
					this.OnGioiTinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaChi", DbType="NVarChar(255)")]
		public string DiaChi
		{
			get
			{
				return this._DiaChi;
			}
			set
			{
				if ((this._DiaChi != value))
				{
					this.OnDiaChiChanging(value);
					this.SendPropertyChanging();
					this._DiaChi = value;
					this.SendPropertyChanged("DiaChi");
					this.OnDiaChiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoDienThoai", DbType="Char(10)")]
		public string SoDienThoai
		{
			get
			{
				return this._SoDienThoai;
			}
			set
			{
				if ((this._SoDienThoai != value))
				{
					this.OnSoDienThoaiChanging(value);
					this.SendPropertyChanging();
					this._SoDienThoai = value;
					this.SendPropertyChanged("SoDienThoai");
					this.OnSoDienThoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(100)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhanVien_HoaDon", Storage="_HoaDons", ThisKey="IdNhanVien", OtherKey="IdNhanVien")]
		public EntitySet<HoaDon> HoaDons
		{
			get
			{
				return this._HoaDons;
			}
			set
			{
				this._HoaDons.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhanVien_HoaDonNhapKho", Storage="_HoaDonNhapKhos", ThisKey="IdNhanVien", OtherKey="IdNhanVien")]
		public EntitySet<HoaDonNhapKho> HoaDonNhapKhos
		{
			get
			{
				return this._HoaDonNhapKhos;
			}
			set
			{
				this._HoaDonNhapKhos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NguoiDung_NhanVien", Storage="_NguoiDung", ThisKey="IdNguoiDung", OtherKey="IdNguoiDung", IsForeignKey=true)]
		public NguoiDung NguoiDung
		{
			get
			{
				return this._NguoiDung.Entity;
			}
			set
			{
				NguoiDung previousValue = this._NguoiDung.Entity;
				if (((previousValue != value) 
							|| (this._NguoiDung.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NguoiDung.Entity = null;
						previousValue.NhanViens.Remove(this);
					}
					this._NguoiDung.Entity = value;
					if ((value != null))
					{
						value.NhanViens.Add(this);
						this._IdNguoiDung = value.IdNguoiDung;
					}
					else
					{
						this._IdNguoiDung = default(long);
					}
					this.SendPropertyChanged("NguoiDung");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HoaDons(HoaDon entity)
		{
			this.SendPropertyChanging();
			entity.NhanVien = this;
		}
		
		private void detach_HoaDons(HoaDon entity)
		{
			this.SendPropertyChanging();
			entity.NhanVien = null;
		}
		
		private void attach_HoaDonNhapKhos(HoaDonNhapKho entity)
		{
			this.SendPropertyChanging();
			entity.NhanVien = this;
		}
		
		private void detach_HoaDonNhapKhos(HoaDonNhapKho entity)
		{
			this.SendPropertyChanging();
			entity.NhanVien = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PhanHoi")]
	public partial class PhanHoi : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _IdPhanHoi;
		
		private long _IdKhachHang;
		
		private string _SoDienThoai;
		
		private string _VanDe;
		
		private string _NoiDungVanDe;
		
		private System.DateTime _ThoiGianPhanHoi;
		
		private EntityRef<KhachHang> _KhachHang;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdPhanHoiChanging(long value);
    partial void OnIdPhanHoiChanged();
    partial void OnIdKhachHangChanging(long value);
    partial void OnIdKhachHangChanged();
    partial void OnSoDienThoaiChanging(string value);
    partial void OnSoDienThoaiChanged();
    partial void OnVanDeChanging(string value);
    partial void OnVanDeChanged();
    partial void OnNoiDungVanDeChanging(string value);
    partial void OnNoiDungVanDeChanged();
    partial void OnThoiGianPhanHoiChanging(System.DateTime value);
    partial void OnThoiGianPhanHoiChanged();
    #endregion
		
		public PhanHoi()
		{
			this._KhachHang = default(EntityRef<KhachHang>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdPhanHoi", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long IdPhanHoi
		{
			get
			{
				return this._IdPhanHoi;
			}
			set
			{
				if ((this._IdPhanHoi != value))
				{
					this.OnIdPhanHoiChanging(value);
					this.SendPropertyChanging();
					this._IdPhanHoi = value;
					this.SendPropertyChanged("IdPhanHoi");
					this.OnIdPhanHoiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdKhachHang", DbType="BigInt NOT NULL")]
		public long IdKhachHang
		{
			get
			{
				return this._IdKhachHang;
			}
			set
			{
				if ((this._IdKhachHang != value))
				{
					if (this._KhachHang.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdKhachHangChanging(value);
					this.SendPropertyChanging();
					this._IdKhachHang = value;
					this.SendPropertyChanged("IdKhachHang");
					this.OnIdKhachHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoDienThoai", DbType="Char(10) NOT NULL", CanBeNull=false)]
		public string SoDienThoai
		{
			get
			{
				return this._SoDienThoai;
			}
			set
			{
				if ((this._SoDienThoai != value))
				{
					this.OnSoDienThoaiChanging(value);
					this.SendPropertyChanging();
					this._SoDienThoai = value;
					this.SendPropertyChanged("SoDienThoai");
					this.OnSoDienThoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VanDe", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string VanDe
		{
			get
			{
				return this._VanDe;
			}
			set
			{
				if ((this._VanDe != value))
				{
					this.OnVanDeChanging(value);
					this.SendPropertyChanging();
					this._VanDe = value;
					this.SendPropertyChanged("VanDe");
					this.OnVanDeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoiDungVanDe", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string NoiDungVanDe
		{
			get
			{
				return this._NoiDungVanDe;
			}
			set
			{
				if ((this._NoiDungVanDe != value))
				{
					this.OnNoiDungVanDeChanging(value);
					this.SendPropertyChanging();
					this._NoiDungVanDe = value;
					this.SendPropertyChanged("NoiDungVanDe");
					this.OnNoiDungVanDeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThoiGianPhanHoi", DbType="DateTime NOT NULL")]
		public System.DateTime ThoiGianPhanHoi
		{
			get
			{
				return this._ThoiGianPhanHoi;
			}
			set
			{
				if ((this._ThoiGianPhanHoi != value))
				{
					this.OnThoiGianPhanHoiChanging(value);
					this.SendPropertyChanging();
					this._ThoiGianPhanHoi = value;
					this.SendPropertyChanged("ThoiGianPhanHoi");
					this.OnThoiGianPhanHoiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KhachHang_PhanHoi", Storage="_KhachHang", ThisKey="IdKhachHang", OtherKey="IdKhachHang", IsForeignKey=true)]
		public KhachHang KhachHang
		{
			get
			{
				return this._KhachHang.Entity;
			}
			set
			{
				KhachHang previousValue = this._KhachHang.Entity;
				if (((previousValue != value) 
							|| (this._KhachHang.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KhachHang.Entity = null;
						previousValue.PhanHois.Remove(this);
					}
					this._KhachHang.Entity = value;
					if ((value != null))
					{
						value.PhanHois.Add(this);
						this._IdKhachHang = value.IdKhachHang;
					}
					else
					{
						this._IdKhachHang = default(long);
					}
					this.SendPropertyChanged("KhachHang");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SanPham")]
	public partial class SanPham : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _IdSanPham;
		
		private string _TenSanPham;
		
		private int _IdLoaiSP;
		
		private string _AnhSP;
		
		private string _AnhSPChiTiet1;
		
		private string _AnhSPChiTiet2;
		
		private System.Nullable<long> _GiaBan;
		
		private System.Nullable<int> _GiamGia;
		
		private System.Nullable<int> _SoLuongDanhGia;
		
		private string _NoiDungSanPham;
		
		private string _DanhGiaSanPham;
		
		private string _ThanhToanVanChuyen;
		
		private bool _TonTai;
		
		private EntitySet<ChiTietDonHang> _ChiTietDonHangs;
		
		private EntitySet<ChiTietHoaDon> _ChiTietHoaDons;
		
		private EntitySet<ChiTietHoaDonNhapKho> _ChiTietHoaDonNhapKhos;
		
		private EntitySet<Kho> _Khos;
		
		private EntityRef<LoaiSanPham> _LoaiSanPham;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdSanPhamChanging(long value);
    partial void OnIdSanPhamChanged();
    partial void OnTenSanPhamChanging(string value);
    partial void OnTenSanPhamChanged();
    partial void OnIdLoaiSPChanging(int value);
    partial void OnIdLoaiSPChanged();
    partial void OnAnhSPChanging(string value);
    partial void OnAnhSPChanged();
    partial void OnAnhSPChiTiet1Changing(string value);
    partial void OnAnhSPChiTiet1Changed();
    partial void OnAnhSPChiTiet2Changing(string value);
    partial void OnAnhSPChiTiet2Changed();
    partial void OnGiaBanChanging(System.Nullable<long> value);
    partial void OnGiaBanChanged();
    partial void OnGiamGiaChanging(System.Nullable<int> value);
    partial void OnGiamGiaChanged();
    partial void OnSoLuongDanhGiaChanging(System.Nullable<int> value);
    partial void OnSoLuongDanhGiaChanged();
    partial void OnNoiDungSanPhamChanging(string value);
    partial void OnNoiDungSanPhamChanged();
    partial void OnDanhGiaSanPhamChanging(string value);
    partial void OnDanhGiaSanPhamChanged();
    partial void OnThanhToanVanChuyenChanging(string value);
    partial void OnThanhToanVanChuyenChanged();
    partial void OnTonTaiChanging(bool value);
    partial void OnTonTaiChanged();
    #endregion
		
		public SanPham()
		{
			this._ChiTietDonHangs = new EntitySet<ChiTietDonHang>(new Action<ChiTietDonHang>(this.attach_ChiTietDonHangs), new Action<ChiTietDonHang>(this.detach_ChiTietDonHangs));
			this._ChiTietHoaDons = new EntitySet<ChiTietHoaDon>(new Action<ChiTietHoaDon>(this.attach_ChiTietHoaDons), new Action<ChiTietHoaDon>(this.detach_ChiTietHoaDons));
			this._ChiTietHoaDonNhapKhos = new EntitySet<ChiTietHoaDonNhapKho>(new Action<ChiTietHoaDonNhapKho>(this.attach_ChiTietHoaDonNhapKhos), new Action<ChiTietHoaDonNhapKho>(this.detach_ChiTietHoaDonNhapKhos));
			this._Khos = new EntitySet<Kho>(new Action<Kho>(this.attach_Khos), new Action<Kho>(this.detach_Khos));
			this._LoaiSanPham = default(EntityRef<LoaiSanPham>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdSanPham", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long IdSanPham
		{
			get
			{
				return this._IdSanPham;
			}
			set
			{
				if ((this._IdSanPham != value))
				{
					this.OnIdSanPhamChanging(value);
					this.SendPropertyChanging();
					this._IdSanPham = value;
					this.SendPropertyChanged("IdSanPham");
					this.OnIdSanPhamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenSanPham", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string TenSanPham
		{
			get
			{
				return this._TenSanPham;
			}
			set
			{
				if ((this._TenSanPham != value))
				{
					this.OnTenSanPhamChanging(value);
					this.SendPropertyChanging();
					this._TenSanPham = value;
					this.SendPropertyChanged("TenSanPham");
					this.OnTenSanPhamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdLoaiSP", DbType="Int NOT NULL")]
		public int IdLoaiSP
		{
			get
			{
				return this._IdLoaiSP;
			}
			set
			{
				if ((this._IdLoaiSP != value))
				{
					if (this._LoaiSanPham.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdLoaiSPChanging(value);
					this.SendPropertyChanging();
					this._IdLoaiSP = value;
					this.SendPropertyChanged("IdLoaiSP");
					this.OnIdLoaiSPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnhSP", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string AnhSP
		{
			get
			{
				return this._AnhSP;
			}
			set
			{
				if ((this._AnhSP != value))
				{
					this.OnAnhSPChanging(value);
					this.SendPropertyChanging();
					this._AnhSP = value;
					this.SendPropertyChanged("AnhSP");
					this.OnAnhSPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnhSPChiTiet1", DbType="VarChar(255)")]
		public string AnhSPChiTiet1
		{
			get
			{
				return this._AnhSPChiTiet1;
			}
			set
			{
				if ((this._AnhSPChiTiet1 != value))
				{
					this.OnAnhSPChiTiet1Changing(value);
					this.SendPropertyChanging();
					this._AnhSPChiTiet1 = value;
					this.SendPropertyChanged("AnhSPChiTiet1");
					this.OnAnhSPChiTiet1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnhSPChiTiet2", DbType="VarChar(255)")]
		public string AnhSPChiTiet2
		{
			get
			{
				return this._AnhSPChiTiet2;
			}
			set
			{
				if ((this._AnhSPChiTiet2 != value))
				{
					this.OnAnhSPChiTiet2Changing(value);
					this.SendPropertyChanging();
					this._AnhSPChiTiet2 = value;
					this.SendPropertyChanged("AnhSPChiTiet2");
					this.OnAnhSPChiTiet2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GiaBan", DbType="BigInt")]
		public System.Nullable<long> GiaBan
		{
			get
			{
				return this._GiaBan;
			}
			set
			{
				if ((this._GiaBan != value))
				{
					this.OnGiaBanChanging(value);
					this.SendPropertyChanging();
					this._GiaBan = value;
					this.SendPropertyChanged("GiaBan");
					this.OnGiaBanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GiamGia", DbType="Int")]
		public System.Nullable<int> GiamGia
		{
			get
			{
				return this._GiamGia;
			}
			set
			{
				if ((this._GiamGia != value))
				{
					this.OnGiamGiaChanging(value);
					this.SendPropertyChanging();
					this._GiamGia = value;
					this.SendPropertyChanged("GiamGia");
					this.OnGiamGiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLuongDanhGia", DbType="Int")]
		public System.Nullable<int> SoLuongDanhGia
		{
			get
			{
				return this._SoLuongDanhGia;
			}
			set
			{
				if ((this._SoLuongDanhGia != value))
				{
					this.OnSoLuongDanhGiaChanging(value);
					this.SendPropertyChanging();
					this._SoLuongDanhGia = value;
					this.SendPropertyChanged("SoLuongDanhGia");
					this.OnSoLuongDanhGiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoiDungSanPham", DbType="NVarChar(MAX)")]
		public string NoiDungSanPham
		{
			get
			{
				return this._NoiDungSanPham;
			}
			set
			{
				if ((this._NoiDungSanPham != value))
				{
					this.OnNoiDungSanPhamChanging(value);
					this.SendPropertyChanging();
					this._NoiDungSanPham = value;
					this.SendPropertyChanged("NoiDungSanPham");
					this.OnNoiDungSanPhamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DanhGiaSanPham", DbType="NVarChar(MAX)")]
		public string DanhGiaSanPham
		{
			get
			{
				return this._DanhGiaSanPham;
			}
			set
			{
				if ((this._DanhGiaSanPham != value))
				{
					this.OnDanhGiaSanPhamChanging(value);
					this.SendPropertyChanging();
					this._DanhGiaSanPham = value;
					this.SendPropertyChanged("DanhGiaSanPham");
					this.OnDanhGiaSanPhamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThanhToanVanChuyen", DbType="NVarChar(MAX)")]
		public string ThanhToanVanChuyen
		{
			get
			{
				return this._ThanhToanVanChuyen;
			}
			set
			{
				if ((this._ThanhToanVanChuyen != value))
				{
					this.OnThanhToanVanChuyenChanging(value);
					this.SendPropertyChanging();
					this._ThanhToanVanChuyen = value;
					this.SendPropertyChanged("ThanhToanVanChuyen");
					this.OnThanhToanVanChuyenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TonTai", DbType="Bit NOT NULL")]
		public bool TonTai
		{
			get
			{
				return this._TonTai;
			}
			set
			{
				if ((this._TonTai != value))
				{
					this.OnTonTaiChanging(value);
					this.SendPropertyChanging();
					this._TonTai = value;
					this.SendPropertyChanged("TonTai");
					this.OnTonTaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SanPham_ChiTietDonHang", Storage="_ChiTietDonHangs", ThisKey="IdSanPham", OtherKey="IdSanPham")]
		public EntitySet<ChiTietDonHang> ChiTietDonHangs
		{
			get
			{
				return this._ChiTietDonHangs;
			}
			set
			{
				this._ChiTietDonHangs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SanPham_ChiTietHoaDon", Storage="_ChiTietHoaDons", ThisKey="IdSanPham", OtherKey="IdSanPham")]
		public EntitySet<ChiTietHoaDon> ChiTietHoaDons
		{
			get
			{
				return this._ChiTietHoaDons;
			}
			set
			{
				this._ChiTietHoaDons.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SanPham_ChiTietHoaDonNhapKho", Storage="_ChiTietHoaDonNhapKhos", ThisKey="IdSanPham", OtherKey="IdSanPham")]
		public EntitySet<ChiTietHoaDonNhapKho> ChiTietHoaDonNhapKhos
		{
			get
			{
				return this._ChiTietHoaDonNhapKhos;
			}
			set
			{
				this._ChiTietHoaDonNhapKhos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SanPham_Kho", Storage="_Khos", ThisKey="IdSanPham", OtherKey="IdSanPham")]
		public EntitySet<Kho> Khos
		{
			get
			{
				return this._Khos;
			}
			set
			{
				this._Khos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LoaiSanPham_SanPham", Storage="_LoaiSanPham", ThisKey="IdLoaiSP", OtherKey="IdLoaiSP", IsForeignKey=true)]
		public LoaiSanPham LoaiSanPham
		{
			get
			{
				return this._LoaiSanPham.Entity;
			}
			set
			{
				LoaiSanPham previousValue = this._LoaiSanPham.Entity;
				if (((previousValue != value) 
							|| (this._LoaiSanPham.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LoaiSanPham.Entity = null;
						previousValue.SanPhams.Remove(this);
					}
					this._LoaiSanPham.Entity = value;
					if ((value != null))
					{
						value.SanPhams.Add(this);
						this._IdLoaiSP = value.IdLoaiSP;
					}
					else
					{
						this._IdLoaiSP = default(int);
					}
					this.SendPropertyChanged("LoaiSanPham");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ChiTietDonHangs(ChiTietDonHang entity)
		{
			this.SendPropertyChanging();
			entity.SanPham = this;
		}
		
		private void detach_ChiTietDonHangs(ChiTietDonHang entity)
		{
			this.SendPropertyChanging();
			entity.SanPham = null;
		}
		
		private void attach_ChiTietHoaDons(ChiTietHoaDon entity)
		{
			this.SendPropertyChanging();
			entity.SanPham = this;
		}
		
		private void detach_ChiTietHoaDons(ChiTietHoaDon entity)
		{
			this.SendPropertyChanging();
			entity.SanPham = null;
		}
		
		private void attach_ChiTietHoaDonNhapKhos(ChiTietHoaDonNhapKho entity)
		{
			this.SendPropertyChanging();
			entity.SanPham = this;
		}
		
		private void detach_ChiTietHoaDonNhapKhos(ChiTietHoaDonNhapKho entity)
		{
			this.SendPropertyChanging();
			entity.SanPham = null;
		}
		
		private void attach_Khos(Kho entity)
		{
			this.SendPropertyChanging();
			entity.SanPham = this;
		}
		
		private void detach_Khos(Kho entity)
		{
			this.SendPropertyChanging();
			entity.SanPham = null;
		}
	}
}
#pragma warning restore 1591
